scalar DateTime
scalar PositiveFloat
scalar PositiveInt

type Query {
    getTransactions : [Transaction]
}

type Mutation {
    addTransaction(transaction: TransactionInput!): Boolean
}

type Account {
    accountId: ID!  @external
}

type Transaction {
    transactionId: ID!
    account: Account!
    transactionTimestamp: DateTime!
    description: String!
    status: TransactionStatus!
    amount: PositiveFloat!
    transactionType: TransactionType!
    payee: String!
    checkNumber: PositiveInt
}

input TransactionInput {
    accountId: ID!
    transactionId: ID!
    transactionTimestamp: DateTime!
    description: String!
    status: TransactionStatus!
    amount: PositiveFloat!
    transactionType: TransactionType!
    payee: String
    checkNumber: PositiveInt
}


# Define all enum types here.
enum InterestRateType {
    FIXED
    VARIABLE
}

enum TransactionStatus {
    PENDING
    POSTED
}

enum TransactionType {
    CHECK
    WITHDRAWAL
    TRANSFER
    POSDEBIT
    ATMWITHDRAWAL
    BILLPAYMENT
    FEE
    DEPOSIT
    ADJUSTMENT
    INTEREST
    DIVIDEND
    DIRECTDEPOSIT
}
